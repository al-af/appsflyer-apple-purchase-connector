name: Release on Merge

on:
  pull_request:
    types: [closed]
    branches: [ main ]

jobs:
  release:
    if: >
      github.event.pull_request.merged == true &&
      startsWith(github.event.pull_request.head.ref, 'releases/')
    runs-on: macos-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Extract version from branch name
        id: extract_version
        run: |
          VERSION=$(echo "${{ github.event.pull_request.head.ref }}" \
                    | grep -Eo '[0-9]+\.[0-9]+\.[0-9]+' \
                    | head -1)
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      - name: Ensure XCFrameworks present
        run: |
          [ -d PurchaseConnector.xcframework ]        || (echo Missing root XCFramework && exit 1)
          [ -d Dynamic/PurchaseConnector.xcframework ] || (echo Missing dynamic XCFramework && exit 1)

      - name: Update Carthage JSONs
        run: ./scripts/update_carthage.sh "${{ env.VERSION }}"

      - name: Update Podspec
        run: ./scripts/update_podspec.sh "${{ env.VERSION }}"

      - name: Update Swift Package manifest
        run: ./scripts/update_spm.sh "${{ env.VERSION }}"

      - name: Commit bumped manifests
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config user.name "github-actions"
          git config user.email "actions@github.com"
          git add Carthage/*.json PurchaseConnector.podspec Package.swift
          git commit -m "Bump version to v${{ env.VERSION }}"
          git push

      - name: Create annotated tag & draft release
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name:    "v${{ env.VERSION }}"
          release_name: "v${{ env.VERSION }}"
          draft:       true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Zip XCFrameworks
        run: |
          # static
          zip -r purchase-connector-static.xcframework.zip PurchaseConnector.xcframework
          # dynamic
          zip -r purchase-connector-dynamic.xcframework.zip Dynamic/PurchaseConnector.xcframework

      - name: Upload static XCFramework Zip
        uses: actions/upload-release-asset@v1
        with:
          upload_url:    ${{ steps.create_release.outputs.upload_url }}
          asset_path:    purchase-connector-static.xcframework.zip
          asset_name:    purchase-connector-static.xcframework.zip
          asset_content_type: application/zip

      - name: Upload dynamic XCFramework Zip
        uses: actions/upload-release-asset@v1
        with:
          upload_url:    ${{ steps.create_release.outputs.upload_url }}
          asset_path:    purchase-connector-dynamic.xcframework.zip
          asset_name:    purchase-connector-dynamic.xcframework.zip
          asset_content_type: application/zip

     - name: Publish to CocoaPods
        env:
          COCOAPODS_TRUNK_TOKEN: ${{ secrets.COCOAPODS_TRUNK_TOKEN }}
        run: |
          gem install cocoapods
          pod repo update
          pod trunk push PurchaseConnector.podspec --allow-warnings --use-libraries
